<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
     http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context.xsd 
      http://www.springframework.org/schema/mvc 
      http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"  default-lazy-init="true">
    
	<context:property-placeholder location="classpath:db.properties"/>  
      
    <!--数据库连接-->  
   	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
  		<property name="driverClass" value="${jdbc.driver}" />
		<!-- NC测试库 -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 新ERP节点数据测试 -->
<!-- 		<property name="jdbcUrl" value="jdbc:mysql://10.0.0.38:3306/hxqc_erp_node1?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8" /> -->
<!-- 		<property name="user" value="hxqc" /> -->
<!-- 		<property name="password" value="hxqc123456" /> -->
		<!-- NC正式库 -->
<!-- 		<property name="jdbcUrl" value="jdbc:mysql://10.0.0.164:3306/hxqc_erp?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8" /> -->
<!-- 		<property name="user" value="hxqc" /> -->
<!-- 		<property name="password" value="hxqc123456" /> -->
		<property name="minPoolSize" value="1" />
      	<property name="maxPoolSize" value="50" />
      	<!-- 最大空闲时间，1800秒内未使用则连接被丢弃；若为0则永不丢弃。Default: 0 -->
      	<property name="maxIdleTime" value="1800" />
      	<property name="acquireIncrement" value="2" />
      	<!-- c3p0全局的PreparedStatements缓存的大小；
      	                如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。Default: 0
      	               但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 -->
      	<property name="maxStatements" value="0" />
      	<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，Default: 3 -->
      	<property name="initialPoolSize" value="2" />
      	<!-- 如果设为true那么在取得连接的同时将校验连接的有效性；若检测为无效，则自动重新获取连接。Default: false -->
      	<property name="testConnectionOnCheckin" value="true" />
      	<!-- 每60秒检查所有连接池中的空闲连接。Default: 0 -->  
      	<property name="idleConnectionTestPeriod" value="60" />
      	<!-- Oracle、MySQL连接有效性检测 -->
      	<property name="preferredTestQuery" value="select 1 from dual" />
      	<!--定义在从数据库获取新连接失败后重复尝试的次数，Default: 30 ；小于等于0表示无限次--> 
      	<property name="acquireRetryAttempts" value="30" />
      	<!--重新尝试的时间间隔，Default：1000毫秒--> 
      	<property name="acquireRetryDelay" value="100" />
      	<!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接 -->
      	<property name="breakAfterAcquireFailure" value="false" />
      	<!-- 因性能消耗大，请只在需要的时候使用它；
                                      如果设为true那么在每个connection提交的时候都将校验其有效性；
                                     建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。Default: false -->
      	<property name="testConnectionOnCheckout" value="false" />
      	<!-- 连接池用完时客户调用getConnection()后等待获取连接的时间，单位：毫秒。超时后会抛出SQLException，如果设置0，则无限等待。Default:0 -->  
 		<property name="checkoutTimeout" value="20000"/>
	</bean>
    
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
               <property name="configLocation"  value="classpath:SqlMapConfig.xml" />  
               <property name="dataSource" ref="dataSource"></property>
          </bean>
          
 <!--          <bean id="sutDentao" class="com.test.dao.StudentDaoImpl">
            <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
          </bean>
	 -->
	<!-- <context:component-scan base-package="com.hx.erp.**.service" /> -->
		<!-- 自动搜索@Controller标注的类 -->
		<!-- Activates scanning of @Autowired -->
	<context:annotation-config />
	<context:component-scan base-package="com.myorder.action" />

<!--mapper扫描器  -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="basePackage" value="com.myorder.dao"></property>
     <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
   </bean>

	<!-- Default ViewResolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp"></property>
	</bean>
	
     <!--配置拦截器, 多个拦截器,顺序执行 -->  
    <mvc:interceptors>    
        <mvc:interceptor>    
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
            <mvc:mapping path="/**" />  
          
            <bean class="com.test.filter.LoginFilter"></bean>    
        </mvc:interceptor>  
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
    </mvc:interceptors>  
    
    
    <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize">
      <value>5242880</value>
    </property>
    </bean>
    
<!--     	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			Read-only commented out to make things easier for end-users
			http://issues.appfuse.org/browse/APF-556
			tx:method name="get*" read-only="true"/
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
    
    AOP事务
	<aop:config>
		<aop:pointcut expression="execution(* *..dao..*(..))" id="dao-pc" />  
    	<aop:pointcut expression="execution(* *..service.impl..*(..))" id="service-pc"/>  
		<aop:advisor advice-ref="txAdvice" pointcut-ref="dao-pc" order="2"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="service-pc" order="2"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..service.*Manager.*(..))||execution(* *..dao.*Dao.*(..))||execution(* *..*TaskListener.on*(..))" order="2" />
	</aop:config> -->
</beans>